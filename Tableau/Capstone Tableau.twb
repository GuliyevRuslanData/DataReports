<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <ISO8601PeriodTypes predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
        <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        <members>
          <member value='&quot;Total Revenue&quot;' />
          <member value='&quot;Minutes of Usage&quot;' />
          <member value='&quot;Onnet Minutes of Usage&quot;' />
          <member value='&quot;Offnet Minutes of Usage&quot;' />
          <member value='&quot;MB of Usage&quot;' />
        </members>
      </column>
      <column caption='AVG KPI List' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average revenue per subscriber&quot;'>
        <calculation class='tableau' formula='&quot;Average revenue per subscriber&quot;' />
        <members>
          <member value='&quot;Average revenue per subscriber&quot;' />
          <member value='&quot;Average voice revenue per subscriber&quot;' />
          <member value='&quot;Average data revenue per subscriber&quot;' />
          <member value='&quot;Average on-net revenue per subscriber&quot;' />
          <member value='&quot;Average off-net revenue per subscriber&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Data+ (Performance Analysis (2))' inline='true' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis (2)' name='excel-direct.0wax9um08tp5mi162i38316tliyk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/Performance Analysis (2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0wax9um08tp5mi162i38316tliyk' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0wax9um08tp5mi162i38316tliyk' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Change' datatype='real' name='[Calculation_472033602397220864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_493988650567561218])-LOOKUP(SUM([Calculation_493988650567561218]),-1))&#13;&#10;/LOOKUP(SUM([Calculation_493988650567561218]),-1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Last' datatype='boolean' name='[Calculation_472033602398052354]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LAST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Change color' datatype='string' name='[Calculation_472033602398306307]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_472033602397220864]&gt;0 THEN &apos;Positive&apos;&#13;&#10;ELSE &apos;Negative&apos; END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Good News' datatype='string' name='[Calculation_472033602409455624]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_472033602397220864]&gt;0 THEN &apos;Good News!!! &apos;+[Parameters].[Parameter 1]+&apos; increased by &apos; + STR(ROUND([Calculation_472033602397220864]*100.0))+&apos;% in the last week&apos;&#13;&#10;ELSEIF  [Calculation_472033602397220864]&lt;0 THEN &apos;ALARM!!! &apos;+[Parameters].[Parameter 1]+&apos; decreased by &apos; + STR(ROUND([Calculation_472033602397220864]*100.0))+&apos;% in the last week&apos; &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average revenue per subscriber' datatype='real' name='[Calculation_472033602421436425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Revenue Subscribers]' />
      </column>
      <column caption='Average voice revenue per subscriber' datatype='real' name='[Calculation_472033602421862410]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Voice Subscribers]' />
      </column>
      <column caption='Average data revenue per subscriber' datatype='real' name='[Calculation_472033602422153227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Data subscribers]' />
      </column>
      <column caption='Average on-net revenue per subscriber' datatype='real' name='[Calculation_472033602423119884]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OnNet Subscribers]' />
      </column>
      <column caption='Average off-net revenue per subscriber' datatype='real' name='[Calculation_472033602423291917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OffNet Subscribers]' />
      </column>
      <column caption='KPI List AVG' datatype='real' name='[Calculation_472033602423951374]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2] &#13;&#10;WHEN &apos;Average revenue per subscriber&apos; THEN [Calculation_472033602421436425]&#13;&#10;WHEN &apos;Average voice revenue per subscriber&apos; THEN [Calculation_472033602421862410]&#13;&#10;WHEN &apos;Average data revenue per subscriber&apos; THEN [Calculation_472033602422153227]&#13;&#10;WHEN &apos;Average on-net revenue per subscriber&apos; THEN [Calculation_472033602423119884]&#13;&#10;WHEN &apos;Average off-net revenue per subscriber&apos; THEN [Calculation_472033602423291917]&#13;&#10;END' />
      </column>
      <column caption='Voice Revenue ' datatype='integer' name='[Calculation_472033602428887055]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Minutes of Usage]+[OffNet Minutes of Usage]' />
      </column>
      <column caption='Portion of data revenue in total' datatype='real' name='[Calculation_472033602433314832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Data Revenue])/SUM([Calculation_493988650567000064])*100' />
      </column>
      <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
      </column>
      <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
      </column>
      <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_472033602421862410]' derivation='Sum' name='[sum:Calculation_472033602421862410:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_472033602428887055]' derivation='Sum' name='[sum:Calculation_472033602428887055:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_472033602398306307]' derivation='User' name='[usr:Calculation_472033602398306307:nk:2]' pivot='key' type='nominal'>
        <table-calc ordering-type='Columns' />
        <table-calc field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[Calculation_472033602397220864]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_472033602428887055]' derivation='User' name='[usr:Calculation_472033602428887055:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.289608' measure-ordering='alphabetic' measure-percentage='0.531516' parameter-percentage='0.178876' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_472033602398306307:nk:2]' type='palette'>
            <map to='#4105f2'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#a73611'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[pcdf:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602428887055:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602421862410:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602428887055:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
        </column>
        <column caption='AVG KPI List' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average revenue per subscriber&quot;'>
          <calculation class='tableau' formula='&quot;Average revenue per subscriber&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average data revenue per subscriber'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average data revenue per subscriber' datatype='real' name='[Calculation_472033602422153227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Data subscribers]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Data subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602422153227]' derivation='Sum' name='[sum:Calculation_472033602422153227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602422153227:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.9944751262664795' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FE8663B8-C077-40F2-878A-F31E296280C2}' />
    </worksheet>
    <worksheet name='Average off-net revenue per subscriber'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average off-net revenue per subscriber' datatype='real' name='[Calculation_472033602423291917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OffNet Subscribers]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OffNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602423291917]' derivation='Sum' name='[sum:Calculation_472033602423291917:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602423291917:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.8618783950805664' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{66BA1C10-4A57-4957-916D-F65828128058}' />
    </worksheet>
    <worksheet name='Average on-net revenue per subscriber'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average on-net revenue per subscriber' datatype='real' name='[Calculation_472033602423119884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OnNet Subscribers]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OnNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602423119884]' derivation='Sum' name='[sum:Calculation_472033602423119884:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602423119884:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.7292816638946533' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4CD49FB-7030-427A-B1BF-44A7E7E31CB0}' />
    </worksheet>
    <worksheet name='Average voice revenue per subscriber'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average voice revenue per subscriber' datatype='real' name='[Calculation_472033602421862410]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Voice Subscribers]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602421862410]' derivation='Sum' name='[sum:Calculation_472033602421862410:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602421862410:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.9944751262664795' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4952D180-A3B1-48BE-B651-8385A2F32FB5}' />
    </worksheet>
    <worksheet name='For which tariff data revenue is higher than other types of revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:OffNet Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:OnNet Revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#e6ecf0' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</rows>
        <cols>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E146E60E-10A0-40BB-9FF7-0E9CD5E19FB9}' />
    </worksheet>
    <worksheet name='KPI List'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>KPI List</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
            </column>
            <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_493988650567561218]' derivation='Sum' name='[sum:Calculation_493988650567561218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-size' value='20' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#edc948' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567561218:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61780ADE-9BDE-4917-8ECE-77D55905E632}' />
    </worksheet>
    <worksheet name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Change' datatype='real' name='[Calculation_472033602397220864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_493988650567561218])-LOOKUP(SUM([Calculation_493988650567561218]),-1))&#13;&#10;/LOOKUP(SUM([Calculation_493988650567561218]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Last' datatype='boolean' name='[Calculation_472033602398052354]' role='measure' type='nominal'>
              <calculation class='tableau' formula='LAST()=0'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Good News' datatype='string' name='[Calculation_472033602409455624]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_472033602397220864]&gt;0 THEN &apos;Good News!!! &apos;+[Parameters].[Parameter 1]+&apos; increased by &apos; + STR(ROUND([Calculation_472033602397220864]*100.0))+&apos;% in the last week&apos;&#13;&#10;ELSEIF  [Calculation_472033602397220864]&lt;0 THEN &apos;ALARM!!! &apos;+[Parameters].[Parameter 1]+&apos; decreased by &apos; + STR(ROUND([Calculation_472033602397220864]*100.0))+&apos;% in the last week&apos; &#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
            </column>
            <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602398052354]' derivation='User' name='[usr:Calculation_472033602398052354:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_472033602409455624]' derivation='User' name='[usr:Calculation_472033602409455624:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[Calculation_472033602397220864]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_472033602398052354:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk:3]</column>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='798' />
            <format attr='color' value='#152db7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]' value='false' />
            <format attr='display' field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[wk:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602409455624:nk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok] / [federated.0kuxlzk1ub04wp12otfh40lnpex1].[wk:Date:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{B5559073-5B0E-4E31-818B-417724C40811}' />
    </worksheet>
    <worksheet name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Change' datatype='real' name='[Calculation_472033602397220864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_493988650567561218])-LOOKUP(SUM([Calculation_493988650567561218]),-1))&#13;&#10;/LOOKUP(SUM([Calculation_493988650567561218]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Last' datatype='boolean' name='[Calculation_472033602398052354]' role='measure' type='nominal'>
              <calculation class='tableau' formula='LAST()=0'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Change color' datatype='string' name='[Calculation_472033602398306307]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_472033602397220864]&gt;0 THEN &apos;Positive&apos;&#13;&#10;ELSE &apos;Negative&apos; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
            </column>
            <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_472033602397220864]' derivation='User' name='[usr:Calculation_472033602397220864:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_472033602397220864]' derivation='User' name='[usr:Calculation_472033602397220864:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_472033602398052354]' derivation='User' name='[usr:Calculation_472033602398052354:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[twk:Date:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_472033602398306307]' derivation='User' name='[usr:Calculation_472033602398306307:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[Calculation_472033602397220864]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_493988650567561218])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_472033602398052354:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</column>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='background-color' value='#000000' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#edc948' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]' />
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602397220864:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</rows>
        <cols>([federated.0kuxlzk1ub04wp12otfh40lnpex1].[twk:Date:ok] * [federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602397220864:qk])</cols>
      </table>
      <simple-id uuid='{C5B734AE-2E6E-4F72-9BB9-4179ACAD8203}' />
    </worksheet>
    <worksheet name='Performance of each KPI in the last week'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Performance of each KPI in the last week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
            </column>
            <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_493988650567561218]' derivation='Sum' name='[sum:Calculation_493988650567561218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[tdy:Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-anchor='#2020-07-04 00:00:00#' period-type='week' period-type-v2='week' />
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[tdy:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567561218:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567561218:qk]</rows>
        <cols>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{B7246ADD-5C4A-42E6-B37F-07C9CA2EF946}' />
    </worksheet>
    <worksheet name='Portion of data revenue in the total revenue for each tariff'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Portion of data revenue in total' datatype='real' name='[Calculation_472033602433314832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Data Revenue])/SUM([Calculation_493988650567000064])*100' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_472033602433314832]' derivation='User' name='[usr:Calculation_472033602433314832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602433314832:qk]' />
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602433314832:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{54A7D128-3BE4-46D3-A9C7-80F53E548398}' />
    </worksheet>
    <worksheet name='RESULT'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='AVG KPI List' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average revenue per subscriber&quot;'>
              <calculation class='tableau' formula='&quot;Average revenue per subscriber&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average revenue per subscriber' datatype='real' name='[Calculation_472033602421436425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Revenue Subscribers]' />
            </column>
            <column caption='Average voice revenue per subscriber' datatype='real' name='[Calculation_472033602421862410]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Voice Subscribers]' />
            </column>
            <column caption='Average data revenue per subscriber' datatype='real' name='[Calculation_472033602422153227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Data subscribers]' />
            </column>
            <column caption='Average on-net revenue per subscriber' datatype='real' name='[Calculation_472033602423119884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OnNet Subscribers]' />
            </column>
            <column caption='Average off-net revenue per subscriber' datatype='real' name='[Calculation_472033602423291917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of OffNet Subscribers]' />
            </column>
            <column caption='KPI List AVG' datatype='real' name='[Calculation_472033602423951374]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2] &#13;&#10;WHEN &apos;Average revenue per subscriber&apos; THEN [Calculation_472033602421436425]&#13;&#10;WHEN &apos;Average voice revenue per subscriber&apos; THEN [Calculation_472033602421862410]&#13;&#10;WHEN &apos;Average data revenue per subscriber&apos; THEN [Calculation_472033602422153227]&#13;&#10;WHEN &apos;Average on-net revenue per subscriber&apos; THEN [Calculation_472033602423119884]&#13;&#10;WHEN &apos;Average off-net revenue per subscriber&apos; THEN [Calculation_472033602423291917]&#13;&#10;END' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Data subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OffNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OnNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Revenue Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_472033602423951374]' derivation='Sum' name='[sum:Calculation_472033602423951374:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602423951374:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602423951374:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602423951374:qk]</rows>
        <cols>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AFCA27C8-F201-4345-8A81-5AA9443C2135}' />
    </worksheet>
    <worksheet name='Revenue proportion of each tariff'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493988650567000064]' derivation='Sum' name='[pcto:sum:Calculation_493988650567000064:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_493988650567000064]' derivation='Sum' name='[sum:Calculation_493988650567000064:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Tariff 3&quot;</bucket>
              <bucket>&quot;Tariff 16&quot;</bucket>
              <bucket>&quot;Tariff 2&quot;</bucket>
              <bucket>&quot;Tariff 8&quot;</bucket>
              <bucket>&quot;Tariff 9&quot;</bucket>
              <bucket>&quot;Tariff 11&quot;</bucket>
              <bucket>&quot;Tariff 14&quot;</bucket>
              <bucket>&quot;Tariff 7&quot;</bucket>
              <bucket>&quot;Tariff 10&quot;</bucket>
              <bucket>&quot;Tariff 12&quot;</bucket>
              <bucket>&quot;Tariff 4&quot;</bucket>
              <bucket>&quot;Tariff 15&quot;</bucket>
              <bucket>&quot;Tariff 6&quot;</bucket>
              <bucket>&quot;Tariff 13&quot;</bucket>
              <bucket>&quot;Tariff 5&quot;</bucket>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' />
              <size column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' />
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[pcto:sum:Calculation_493988650567000064:qk]' />
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{896C7910-3063-4C59-85B7-F46B78148B59}' />
    </worksheet>
    <worksheet name='Total revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_493988650567000064]' derivation='Sum' name='[sum:Calculation_493988650567000064:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='color' data-class='subtotal' scope='cols' value='#499894' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8234B229-F84E-4FD1-BDA8-62BA006F382B}' />
    </worksheet>
    <worksheet name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Voice Revenue ' datatype='integer' name='[Calculation_472033602428887055]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Minutes of Usage]+[OffNet Minutes of Usage]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602428887055]' derivation='Sum' name='[sum:Calculation_472033602428887055:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602428887055:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602428887055:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602428887055:qk] + [federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Data Revenue:qk])</rows>
        <cols>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{02E417E3-497C-4929-B6B7-9058717F83E5}' />
    </worksheet>
    <worksheet name='Weekly time plot of each KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column caption='Minutes of Usage' datatype='integer' name='[Calculation_493988650567114753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Minutes of Usage]+[OnNet Minutes of Usage]' />
            </column>
            <column caption='KPI List' datatype='integer' name='[Calculation_493988650567561218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Total Revenue&apos; THEN [Calculation_493988650567000064]&#13;&#10;WHEN &apos;Minutes of Usage&apos; THEN [Calculation_493988650567114753]&#13;&#10;WHEN &apos;Onnet Minutes of Usage&apos; THEN [OnNet Minutes of Usage]&#13;&#10;WHEN &apos;Offnet Minutes of Usage&apos; THEN [OffNet Minutes of Usage]&#13;&#10;WHEN &apos;MB of Usage&apos; THEN [MB of Usage] END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_493988650567561218]' derivation='Sum' name='[sum:Calculation_493988650567561218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='color' data-class='total' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#4e79a7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#edc948' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-style' value='normal' />
            <format attr='text-decoration' value='none' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567561218:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567561218:qk]</rows>
        <cols>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{7253468F-0953-4C88-B8FF-C0B94F793BA5}' />
    </worksheet>
    <worksheet name='Which tariff has the highest data revenue growth in last month'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='member' level='[mn:Date:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</column>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f3ebf3' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[pcdf:sum:Data Revenue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk] / ([federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok] / [federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{5501E793-9826-4F24-8881-09CEDBE3DEE8}' />
    </worksheet>
    <worksheet name='Which tariff has the highest revenue on January, 2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MY' name='[my:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_493988650567000064]' derivation='Sum' name='[sum:Calculation_493988650567000064:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[my:Date:ok]'>
            <groupfilter function='member' level='[my:Date:ok]' member='202001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_493988650567000064])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[my:Date:ok]</column>
            <column>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ebebeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2EDEB99B-CCC0-45FD-A098-D00B762888BC}' />
    </worksheet>
    <worksheet name='average revenue per subscriber'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average revenue per subscriber</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (2))' name='federated.0kuxlzk1ub04wp12otfh40lnpex1' />
          </datasources>
          <datasource-dependencies datasource='federated.0kuxlzk1ub04wp12otfh40lnpex1'>
            <column caption='Average revenue per subscriber' datatype='real' name='[Calculation_472033602421436425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_493988650567000064]/[Number of Revenue Subscribers]' />
            </column>
            <column caption='Total Revenue' datatype='integer' name='[Calculation_493988650567000064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]+[OffNet Revenue]+[OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Revenue Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_472033602421436425]' derivation='Sum' name='[sum:Calculation_472033602421436425:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_472033602421436425:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.9944751262664795' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{035295DD-DB76-4CE7-BCA6-0C54665F3F5E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name=' Additional Dashboard '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e8edda' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#59a14f' />
          <format attr='font-weight' value='bold' />
          <format attr='text-decoration' value='none' />
          <format attr='font-size' value='20' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5625' id='7' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92375' id='6' type='layout-basic' w='98400' x='800' y='6625' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='56750' id='8' name='Which tariff has the highest revenue on January, 2020' w='19400' x='78500' y='11500' />
        <zone h='59250' id='9' name='Which tariff has the highest data revenue growth in last month' w='34500' x='39800' y='12375' />
        <zone h='77750' id='10' name='For which tariff data revenue is higher than other types of revenue' w='35900' x='300' y='12750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5625' id='7' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56750' id='8' is-fixed='true' name='Which tariff has the highest revenue on January, 2020' w='19400' x='78500' y='11500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59250' id='9' is-fixed='true' name='Which tariff has the highest data revenue growth in last month' w='34500' x='39800' y='12375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77750' id='10' is-fixed='true' name='For which tariff data revenue is higher than other types of revenue' w='35900' x='300' y='12750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9095C43C-5875-43FF-AD45-22AB7F0EA040}' />
    </dashboard>
    <dashboard name='Daily Revenue PerformanceAnalysis Dashboard '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#4e79a7' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='AVG KPI List' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Average revenue per subscriber&quot;'>
          <calculation class='tableau' formula='&quot;Average revenue per subscriber&quot;' />
          <members>
            <member value='&quot;Average revenue per subscriber&quot;' />
            <member value='&quot;Average voice revenue per subscriber&quot;' />
            <member value='&quot;Average data revenue per subscriber&quot;' />
            <member value='&quot;Average on-net revenue per subscriber&quot;' />
            <member value='&quot;Average off-net revenue per subscriber&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='17' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='14' type='layout-basic' w='98400' x='800' y='6125' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='26375' id='3' name='Total revenue' w='33300' x='500' y='9000' />
        <zone h='28375' id='4' name='Revenue proportion of each tariff' w='33300' x='300' y='21625' />
        <zone h='5000' id='5' name='Revenue proportion of each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' type='size' w='14000' x='33600' y='19875' />
        <zone h='39000' id='6' name='Revenue proportion of each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' type='color' w='16900' x='35100' y='25000' />
        <zone h='30125' id='7' name='RESULT' w='48000' x='1600' y='67500' />
        <zone h='5500' id='8' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='34900' y='67500' />
        <zone h='46375' id='9' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.' w='39100' x='59300' y='8875' />
        <zone h='7250' id='10' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.' pane-specification-id='3' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' type='color' w='15900' x='42500' y='8875' />
        <zone h='42625' id='11' name='Portion of data revenue in the total revenue for each tariff' w='34300' x='65400' y='54875' />
        <zone h='9500' id='12' name='Portion of data revenue in the total revenue for each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602433314832:qk]' type='color' w='14000' x='46500' y='59250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5125' id='17' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='9' is-fixed='true' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.' w='39100' x='59300' y='8875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='10' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.' pane-specification-id='3' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' type='color' w='15900' x='42500' y='8875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='211' h='26375' id='3' is-fixed='true' name='Total revenue' w='33300' x='500' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='28375' id='4' is-fixed='true' name='Revenue proportion of each tariff' w='33300' x='300' y='21625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5000' id='5' name='Revenue proportion of each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' type='size' w='14000' x='33600' y='19875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='39000' id='6' name='Revenue proportion of each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' type='color' w='16900' x='35100' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42625' id='11' is-fixed='true' name='Portion of data revenue in the total revenue for each tariff' w='34300' x='65400' y='54875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='12' name='Portion of data revenue in the total revenue for each tariff' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602433314832:qk]' type='color' w='14000' x='46500' y='59250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='241' h='30125' id='7' is-fixed='true' name='RESULT' w='48000' x='1600' y='67500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='8' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='34900' y='67500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D70A7B5D-CFAA-49DB-8AA0-4D4924E6311A}' />
    </dashboard>
    <dashboard name='Weekly KPI performance Analysis Dashboard '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Weekly KPI performance Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5ead7' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#000000' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI List' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total Revenue&quot;' />
          <members>
            <member value='&quot;Total Revenue&quot;' />
            <member value='&quot;Minutes of Usage&quot;' />
            <member value='&quot;Onnet Minutes of Usage&quot;' />
            <member value='&quot;Offnet Minutes of Usage&quot;' />
            <member value='&quot;MB of Usage&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='16' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='7' param='horz' type='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='5' type='layout-basic' w='65900' x='800' y='6125'>
                <zone h='16230' id='3' name='KPI List' w='65900' x='800' y='82770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46437' id='9' name='Weekly time plot of each KPI' w='65900' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30208' id='10' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.' w='65900' x='800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='325' h='92875' id='6' is-fixed='true' param='vert' type='layout-flow' w='32500' x='66700' y='6125'>
                <zone h='6500' id='8' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='32500' x='66700' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]' type='color' w='32500' x='66700' y='12625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47250' id='12' name='Performance of each KPI in the last week' w='32500' x='66700' y='20875'>
                  <layout-cache minheight='226' minwidth='174' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30875' id='13' name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”' w='32500' x='66700' y='68125'>
                  <layout-cache fixed-size-h='239' fixed-size-w='800' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Weekly KPI performance Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5125' id='16' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='9' is-fixed='true' name='Weekly time plot of each KPI' w='65900' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='32500' x='66700' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47250' id='12' is-fixed='true' name='Performance of each KPI in the last week' w='32500' x='66700' y='20875'>
                  <layout-cache minheight='226' minwidth='174' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='30208' id='10' is-fixed='true' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.' w='65900' x='800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.' pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]' type='color' w='32500' x='66700' y='12625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30875' id='13' is-fixed='true' name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”' w='32500' x='66700' y='68125'>
                  <layout-cache fixed-size-h='239' fixed-size-w='800' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='122' h='16230' id='3' is-fixed='true' name='KPI List' w='65900' x='800' y='82770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{543C672E-1C7C-435C-B1C5-85DAD225D033}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='KPI List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{825D7452-4C16-4B47-AC4F-61800A070817}' />
    </window>
    <window class='worksheet' name='Weekly time plot of each KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[twk:Date:qk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1802E89-F7A7-4B99-AF97-9610E7C92BB1}' />
    </window>
    <window class='worksheet' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CE0D478-03BB-4A11-A5D3-2BBE49C4A894}' />
    </window>
    <window class='worksheet' name='Performance of each KPI in the last week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{339C84F3-EA20-41C5-990A-12DA52CB306D}' />
    </window>
    <window class='worksheet' name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[qr:Date:ok]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398052354:nk:3]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602409455624:nk:2]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602409455624:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A450B52-C0F3-4983-BBEA-F670B15216FC}' />
    </window>
    <window class='dashboard' name='Weekly KPI performance Analysis Dashboard '>
      <viewpoints>
        <viewpoint name='KPI List' />
        <viewpoint name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”' />
        <viewpoint name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.'>
          <highlight>
            <color-one-way>
              <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602398306307:nk:2]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Performance of each KPI in the last week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Weekly time plot of each KPI'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{0E41FAA7-4608-4F10-ACE5-B99A745CAB02}' />
    </window>
    <window class='worksheet' name='Total revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D26051BC-60B9-4771-9C18-C712FDB91972}' />
    </window>
    <window class='worksheet' name='Revenue proportion of each tariff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[sum:Calculation_493988650567000064:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Tariff_Id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C74EEE9-5317-4329-9ED1-22641033C923}' />
    </window>
    <window class='worksheet' name='average revenue per subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8C50CC77-6A76-403E-9EE3-0E5C18E986B3}' />
    </window>
    <window class='worksheet' name='Average voice revenue per subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{02EE08B8-3195-4C95-9F35-ACF2801EB383}' />
    </window>
    <window class='worksheet' name='Average data revenue per subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F0A7F48E-261A-4E17-9C67-361A84DC26FD}' />
    </window>
    <window class='worksheet' name='Average on-net revenue per subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{42C397F8-2AD2-4C18-B8D6-922796832EC6}' />
    </window>
    <window class='worksheet' name='Average off-net revenue per subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D733131D-5E4B-4ECD-AA83-3AA331148A05}' />
    </window>
    <window class='worksheet' name='RESULT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D082D79-1AC4-4C5F-8431-8A059D9F7ACC}' />
    </window>
    <window class='worksheet' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{274D4DF4-3D5C-408F-B2AA-2FFB6059D45F}' />
    </window>
    <window class='worksheet' name='Portion of data revenue in the total revenue for each tariff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[usr:Calculation_472033602433314832:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92B950D7-153F-4ADD-A7A4-C7DEA3062E75}' />
    </window>
    <window class='dashboard' name='Daily Revenue PerformanceAnalysis Dashboard '>
      <viewpoints>
        <viewpoint name='Portion of data revenue in the total revenue for each tariff' />
        <viewpoint name='RESULT'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue proportion of each tariff'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total revenue' />
        <viewpoint name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kuxlzk1ub04wp12otfh40lnpex1].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{03F4EBAB-8A95-459A-B726-16BE30187068}' />
    </window>
    <window class='worksheet' name='Which tariff has the highest revenue on January, 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[my:Date:ok]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4493F12C-9FCD-4719-90C8-EA539481AF95}' />
    </window>
    <window class='worksheet' name='Which tariff has the highest data revenue growth in last month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
                  <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
                  <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Tariff 1&quot;</bucket>
                  <bucket>2020</bucket>
                  <bucket>5</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[mn:Date:ok]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17581C8C-161D-424E-AFFA-9A847EDB35C9}' />
    </window>
    <window class='worksheet' name='For which tariff data revenue is higher than other types of revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kuxlzk1ub04wp12otfh40lnpex1].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6478A942-22F0-4491-9240-BB26AD01C159}' />
    </window>
    <window class='dashboard' maximized='true' name=' Additional Dashboard '>
      <viewpoints>
        <viewpoint name='For which tariff data revenue is higher than other types of revenue' />
        <viewpoint name='Which tariff has the highest data revenue growth in last month' />
        <viewpoint name='Which tariff has the highest revenue on January, 2020' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{71123B0B-579F-453F-92E8-7EF94FBE254B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Additional Dashboard ' width='192'>
      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
      aRIAobRfAZfZMskTENXBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='Average data revenue per subscriber' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAENElEQVRYhe1Wf0yUdRx+tKPp7LCoxYopyWTNDBc7dK+kxI88azdJkk0G826DNq+EGTrY
      xHELsNFuzZXidq6owyAgoZF2JRJNIGjkLVJ+GAHGjw41EbsTTHjZnv7g8F70TrhgvX/E89f7
      fr7P9/N93s+v77uIJPE/xmK5BciNhQDILUBuLARAbgFyYyEAcguQGwsBkFuA3FgIgNwC5IZi
      ftw48P3B7cisdgCaw7DmRMxu28QwWipN+OhkDVp6b0GED5T+a7BZ+zZyd66TEjHcUokPjp5A
      w6VruCUCS/1WI+TVFBzYswUrHpZQxwfQUPoZSr9txKW+SS58lHgmNBa69BRsC/adroHzAHtt
      FtXaYtaZE6ky1M1uU28V92oimZBtZn2XnWMkyTHau84yN16gKKWWJXOTOpWm+sscFUlS5Ojg
      eZpT1RS0ZvZIyL3mZCZkm1nTOkD7pFOKo4NsPZXLeEHN3MaRaTLmHgB7HQ3qRBb2iOz1IgBi
      YzFNF+zuFztNtEzpFOtoEKKY3yzezxPbWRCnor5iyGUS3fCcuFqWQpW+gkMS2xxnwCiaPnwX
      3TvzoA3yrpsU4UnYvc7X/WLACtz8y/ls+x3d4gaoXnDjX/EcQkIAx8iIy6TwrOMR5XLg9h3c
      kdjmFIDRpsPIaYnFQW3QfA0TABO4XFGO9QHO18CNiFj5E8794HBD7UBrqy9Wr3piZreOi/i4
      pAnrY19GgNQ+q3p1B9FKo1pNo9VVct60gHufN/izKZmbBO10c08xkyPjmXu2y9nXUzNAw3hj
      Mz00Eskx2q93sd6czYRIDfeWdTpnjQv/qgImOo7hdc03ePHLamSo5pp7By4WpWFr2FaklfQh
      MKUQDT8WSU/D9V/bcWN5AFY+tkRiXwK/J5UQbQMYmvDkezEUDz2Kp9Y+jw3BwIUqC6zD95C9
      z1I7C+KimFV7f9y9rgCxhxWpagqaAzzVf29unOg0MU7YR4vbNNtZmxVFtdFKz6Pv7mHsMWsp
      JJrZK7F6n76mcnza7wAyo1HtlrAPYRYAz6ahskSHQI+OHKjPexPvO2Jx/PM98DQPbeeb0B8U
      jbVu130REbMRmYVtsEH1gLMAQIGgJB2ijxbiXJ8Ouiny7NM1M7yqgE4T4wQ9K67OwLMaGeWx
      AkQ250dRyDjDEef7A25Biu0FjBMyeEbyK/Cf/ApfK38DYWE6lNhcto6ar9Efvg2v+M+wWbUb
      76jbkJeSh9NtV3Db2cLjjm7U5O/CfssqpOpjsAwA0IT8LbtgKPoObX/cvMvFuAPdDceRnl4M
      pV6PmGUu9/N3e3nEb6gq/wWPv3YE2yX3z9CfV4A6A14KM7jdlVZpdZapLyJyTuOLmmPIP6SD
      sXsYfwPwUfpjzWYtjny1A6F+U58Rjv2fLMLJ0lIcessI2+AkF0v98HSwgKT3LNgR6jfto/8B
      LOF0bZpgQNcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Average off-net revenue per subscriber' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADW0lEQVRYhe1YX0hTYRw9hT2E1UMJIREDiaKgelDiBhlZsaj1R0EoNWZUpoUSCPZQaKll
      tGKhSKzoz4wsNLNSLPtjcKUCaZZYQmWZJM2Jtppthd7B6cFW2/TOuybdh3Yez/3d8/2+8+13
      vssmkST+Y0xWuwG1ETZA7QbURtgAtRtQG2ED1G5AbYQNULsBtRE2QO0G1EbExMgM4tGhRBy4
      NwjojLAUrhz/Fbcdr+9W4/zNO2jvtML+AwCmYuaSBKRl7EX68uiRuubDiMttCKzlv+ZwDx5c
      LMW12ha023+M6M5bjPV78pGzOtp305wAOJoOUqu/QtGcytgCUdlLYhF1GUZWPeuk3SWNcEMO
      djabmK0VlGlIFhq0CSwQnb8pp6WM21bpmGGs40urixJJSi5an5mZrRWYVWPzkQjdAIfIAm0q
      L7yX2B2EAZIkyT9rOU6LAg1bTRaFVDO7vbjuWyY2WMfWdjbmUdhYzg4vLsQMcOFp6TG821oM
      fUxw0xQRIV8fMW06hsYTcLfi8rk2xOuTofGiNVsysSF6bO3IuRpEDdjx1YsLyQDXUyMKX2zG
      IX3MRIUJ4O5F/YUbWDZOWd/t86iN3IHd6yIVCg+iuaoOA/HLsNSL/fu+3a04U/gYa0sasCjk
      3bvx/YsNXY+vo+xsHb6tOYZN46x9+Vwb4nNPYb4S+eEe1B/Zi5JWASeur4OPZYoG1n9GO8qZ
      pC3iE6cvH0wG+GPI0c+elw9ozt/GVbr9ARa30KAVmNfolK8hScnKpqJkCkIyi+5/5JBMWfAG
      SB0sT0rgwSbHqEehGOANh1hAUWZ/tposCkkmvgko0EJDssAVO018/lk+bElyEhnkf4JK7mUA
      WJCDG5XpPgGlHF043ByDUZ8T7lac1GWjP/chDHKz7+5Cxa40XJ2dD3PJBsjk4R/85SGNCeW/
      AIkBbkHS0UDTGEes5PSdjXkUtAZaAh/8b/yTT+G+qt2Ii0tH5ScP8wmVmYnYd7oalncDGBz+
      Rbu/o/dVPYp3FSPFP908wZe5PUDwuSDef4SozTrEKgzmCbu95PEWt6raMGtLGRLneDgNUo4f
      xcxaM87kVuBDfx++SQCmTMdszUKs3VONGX4qnmuvIuC1N4B+G9Ar6hF3Sa5GB6OlEJ7p+gm9
      5WItpRGejAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Average on-net revenue per subscriber' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADs0lEQVRYhe1WX2hbZRT/6dqnrhNE6EbnqgUVfRiMu8Kl67QFvaLpKsWiMZvptiotLDCt
      7cMq7TBCH8IsFQtGnXKnG20xk1koCw2bNCVl0MzahtJ1WWtttpFiF83WuGU38PMhXf8kuUm4
      Du6D+cF9Oed85/y+37nf+b5HSBL/YzyqNwG9kRNAbwJ6IyeA3gT0Rk4AvQnojZwAehPQGzkB
      9CagN/I0r4yFMH7Wjm9+dGF8/g4U5KOw6HnsNX+Alrd3YktWKcZxtvsLfPvLJEJ3gfzCp7Dn
      4Mdo278Ljycwux8YQe8PvTjvmcYfi3egIB6/q6YeHzbswzOrBd04vrsZg2krG9Dl/QQvAgC1
      YP4cjxoqaWyX6faHGSVJRhn2D9FaJ1KyealkkcMiSbTIY7wZUUgqjMy5ecIsUmpxMrgxmPJh
      I9tlF32BB/UURm76OGCtoyhZ6VnOhrhCr01iVccwH4RrEkDxnKZ9IpzaOWNnrdDMwbSEluls
      FVnbM5Us1LKHVklkq3N9AoWKqqJB9jUIbHIsZSYedLBJNFGeXzNpmgF55fvRuFPlJy9+Ek9j
      CX/9nS7DZYxe3IHq115IPoMF5TCbSnHxnBO31ioiT/WwbkbhY8A/9+5lYB3D5e+/xm97zagr
      WbM+5CEYw5yjH6M7ylFWnCk2D5s2pfaUlJVj29gkprKoeHvyJM6MlqHm5QwFF3/GyZ8KcPC9
      V1GwzvzwBIiFMP5VI+rtQNOJBjybNrgEpc/NYOTSYmp30VZsxzwCN1SW37+NpWsjONXxDt5o
      +x01pz7Hm0Vpya10vxEHEollPjiZEV0YYqexghXGLnpuZRx/JMllj5WSaOCxfh8X41ONSiTE
      gG+AX35kZIWw8aySJIc7KAjCyvcS3/10kFciWdQLOtgk1tI+k+z6jwKEOSFbKAkSLfKvzHLv
      q4guDLHz0OusFOObqnhlHw+1y3S5umkS2nhBLZ8SYehPP8f6u/i+oZLGLk+a2vHJL7Y6mWou
      axdAmaXDIlE0HOPAQlRzmpTw2lhV3cOpLHnIZpGmpN9lBWm6T2oWIMzhDomiuYdqt6F2KJzo
      rmaVzZv9igttFEwykyVI331S4zWIq73oHipFi+0I1G5DrYjNncFnfVtQ/5awzhhDTH0Frk5P
      I794K55IdKlM/g3Q0qOpnmoKzYOqqiYi2NdAQTDz9PV1xkvfsbN/jP7w6gTknNsefx06Zjc+
      kIatrDzQTtnlYyAUWfVFw3667RZKopnybOIQyNx9kvwXDmjrZ3WDvK8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='Average voice revenue per subscriber' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADwUlEQVRYhe1WXUxTZxh+ZjoSLKsbMf6MCbFZFhMagvZoWtLpGk01ViXOTlCDkHIhovjD
      NNku6EVdYBIiRN3SXZDUiUJVooTgT0nM2s1KRhVEUIHYAP6UGsX1jEpKm7y7oAzX9fdIci7s
      c/WdvO95vifP933v+35ARIT3GHP4FsA3EgbwLYBvJAzgWwDfSBjAtwC+kTCAbwF8I2EA3wL4
      BncD/GPoMlWiVKOEnGHAMHIo1VroTD1g4+GZfIL22lJolHIwDAPmSxW2aHVofuAJu++j1ioU
      KOXYdWY4AjGLHpMOBQFeuVKDUoMNY/6gNOKCoSt0UP0V5VcYyTroJi8REXnJPWgmvUZGqmo7
      +WLhcVtIp1KQttZKg+4pFvK6abDTRA3tT/+b63VRZ1MF5SsUlF9RTeWbpLTTOBSOmCw6Fck0
      ejI7POQjIq+rkwxaBal0FnK/lcnJAN+tBjLcc4cO9htoq7Sc2sajsYzSpRIF7TY+jsmsoaZv
      ae8JMzk8PiIaIuPO8Ab47NWkkpVTW7DEcQvplDI6en1GnCCe2zoNQc4u7AkXTFuCpbDh9V8A
      hBFIBq7gXL8a350SIxYRGXk1+DlGffduXoMv90eoREEB4WpoC8XYZrbAs34jhJj1IuiH45IJ
      tvQcrEyLnOn44yacytVYxekIImEYvd0s5KtWhDQ2Q5INUVcfHgW+Z297/xi66o/igBEoOVeM
      L6KkPx1+jPSFc9DbaoDxcivuPHThbx+QnJoFZXEZDm1bjlRO6p5hxLEYny4K8/P8BVjMOjBd
      YmflBkw+aUdVQS4O/CbB8bZ6FIqjKffD7wdGLv6EC2Ofo0jfiBu37bDbbWg+sQH+s6XYccwa
      Xzd5m9snQkqk54c3mJiYWr2jASx6zpRh89YaPN9wEi1nDyMnpmMTQCAAxEU/QF+4DpLPREgC
      ACRhgWQ7KuuPQGyuQ+MAF00CCD5kMR6mi05hLpKTp1bvMAc40Fz2DfZc/Aj7L7fiVGF8V1aY
      IoLzxcvQwYUMZOIRdN9/xUFYGtLFTjwfDW74Abx8Aaco5d/6zNEAFtZje1HDbsEv5yuxeUlS
      3AzLshhMWDvwIEJO6ifzOGjLgCRbhNt/3kUoC4Z7u8Euz8SywDc3AwYaUWcW40j1PmQFt5oY
      IVybh68nG1B/NcRLd3Xg9/5sZGVyq9HS3Dx83GKCOZjaY8Ov551Q566Z6dAxzCD/Q9/pTSQt
      b6Oos04Ao03FJJXupoag4c5t0ZNaoabvTffJ5SWamSajDUiRByGicbqlj20S/Aee2YmKe4Ix
      +wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Revenue PerformanceAnalysis Dashboard ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='For which tariff data revenue is higher than other types of revenue' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='42' name='KPI List' width='184'>
      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
      fy/MU65inLslAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='42' name='KPI growth in the last week. If it’s negative write “ALARM!!! ‘KPI’ decreased % in the lastweek.”,if it’s positive write “Good news!!! ‘KPI’ increased % in the last week.”' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='List top 5 tariffs for each KPI in the last week and growth rate for each of them.' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Performance of each KPI in the last week' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Portion of data revenue in the total revenue for each tariff' width='144'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='RESULT' width='192'>
      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
      BD9/wgLWZhEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue proportion of each tariff' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXJElEQVR4nO3daXAcZ37f8e/T3XMP7hskDhIkRUoED1EKKWlXXGq1u1rHzsZOpRK7yi5X
      nKpk4yqnKhW/25d5mTfxK6fs2oqd2Lubku29sitKJLQSRerkDd4ESYAgDhIYHHNPH09eDAgS
      xH0Oyf5/3qiA6e5piP3r5+ynldZaI4RPGaU+ASFKSQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8
      TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0C
      IHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8
      TQIgfE0CIHxNAiB8TQIgfE0CIHzNKvUJCLFi2uXjD/4fCSfOb3/3LQZunOfM5Vu8+PIbnD/x
      C5q3HyA5dIP6bfuJhwLs6GibdQgJgHh2OUmCdTvZaSaYyHrYto2nLK5fPk0uUyAUDpI2DAb7
      buHaDjWNjdTEQjMOIVUg8ewyI0z0X+V6bwInN0Ft42Zqy0waGrfQsWsPvX39vHn4MG0N1diZ
      BINjmVmHUFprXYJTF2JN5NKTFAgQtgyU0oxNZqirqWI8MUIwWkE4qACT1OQE8YpKTEPN2F8C
      IHxNqkDimeM5BX79T3/L3/z9P5HKuzM+GxocZLjnMidPd/PR8aMk0gVudH/O2St3QWt+87Of
      8aBgT28vjWDxzDGsIIe+9jr992OM9Jzl55cHeHVvBz29Y2yur+Li6RPUNbdx6uJ1Og8dYfvu
      Fzlz5j6JwR7SSU3O9aaPJQEQz7Teu3e5ffsmTY11vPb6IS5+8Skv7H2Nlzu3YVXWUx0LkpwY
      Znx8nKuJIXrvXiV6aw8tL20FpA0gnlFOIUveNslNDNA/YdO+qZF4LE4qOYlpmcSjEcZTGSrL
      y7hx6TSDowX2H3yFQD6LiscJGcXavwRA+JpUgURJ2Y5LIpnlwXiG+2Np7o+nmUjlSWbyZPMO
      juvyZpOD0awwzt2juakRr6mRUDhEyBwkEq8lFK0jFK3BMALL/n4JgNhQmbzNrYExrvSOcLV3
      hL7hCSbSOfK2O+8+LxgeRDSBS5cIeA7pbAqFgzf2l7iFUcxAjFCkhvKanYTbf4eqhn3Uxcsw
      jcU7OSUAYt0lM3nOXB/i00t3udI7wkQ6x3Iq3loZeNohWCigY9Hi73QB7aYBcO00GTtNZrKP
      u4VWxu5mKQuFaauqYXtdPVuqawmY5pzHlgCIdeF5Ht23H3Ds9C2+vDpAJmcvvtO8DFytiWrw
      gsGp3+Rw3Nys7dLhNjytmchluTDYz4XBfuLBEDvrG9nf2ExteQWoR6PBEgCxZrTW2I7HiQu9
      /PzkdXqHxlmLHhatFI6niStwTQM8D4PkrO2cWBt5ZrcDUoU8X/X30t7dTW04Ai/thrZ2UEoC
      IFZPa03Bcfnw7B3e/c1lHozPnnS2KsrA9VwiWjMxVXdy8qOzNkuHW9GoWb8HqPI07ckkTEzA
      8BBUVcH+AxIAsTqu5/HV1UH+9uh5+h9Mrst3FEsAl1AgiPY8UAqD1KztUqH2eY+xJ5sj4D0a
      AWZsDLqOSQDEymgNQ4kkP/zVOb64cm99vwsDx3WwwuFHv3PHn9iqWP+fSxB4KTk7MCBtALEC
      juvx/pc9/N0HF0llC+v+fRqF7Tqo6Z4cjWsnZp5TpJmcisy5/7aCTXk+P+dnEgCxLKOTWf7q
      F6f57HL/sroyV0Mrhe05aM+d6sFxMcjyWIWGbLgVb47JzQrYl0zN0zKQAIgl0lpzrW+U//Hu
      5wyMzu6BWV8GShs4jjN1Mg6eM7O9kZqn+lPvemzOZOc9sgRALEprzcfne/nLn50mk19Nf/7K
      BbWJnqoCGSr/xBiAIh1un3O/vZks5uON3ydIAMSCtNb848dX+LsPLuJ6pZk3qVQxAMRjxZ/1
      zBLIDTeQM8pm7RfWml3zNH4fkgCIeWmt+T/vX+Ddj66U9DyU0liegZ7qBXILIzM+z4U34zB7
      qsOuvE3UXrjEkkcinwOu45DL5dFa47kOzlSR77oOBdueGqF10NojXyigtYe3yN3c05r/9d75
      kl/8ULxIDVfjBaypn2fe1efq/zeA/Yvc/UFKgOfCvVtX+PKrs+w+8j1Gz/4Dk3Xf5p1Xmvno
      6C8ZSTocfP0VTnff5OD2Bt4/dYWD+7dTv7WT2tjc//ye1vyk6xI/PXF1g/+SuSmlwfamen30
      E2MAilRky6x9Nrku9ZlFRqQrHCkBnge19XV4OkBm8Cr5cC2FTBq0Q6y+ncMvt+LEWmhvqqWy
      uo7qyjB9/YOc+PiTOY+lteboFz38pKt7g/+K+Sk0XsHBnSq0PHts+jM3WE3OrJy1z/5kZt6u
      TwACQNWoBOB50HfnDmZAk1NxIpbCzme5dz+BO3GPjy8MYySucvKTT+idVLz0wnZaNtVQsOce
      wDp9bZAf/urshvXxL4VSGjdv48WiFMeF09OfFcKbsZ+oyMQ1vJBapPpTPwmqII9Eikf6H0zy
      g7/uYiz55DTj0vr9vWEmH/Swu66JdMjEG/3veG5xZPdB/fe4V/b6jO1fy+T4xoORuQ5VVGVD
      5RAgjWAxJZu3+Yt3P3/qLn4AlCbkadxAANMoTF/8AOnwzPq/YpHGbwioeDSTVBrBz4Ezp37B
      8RO9/Ns/+WNaauPTv5+4P0jB9Pj0xDUqyrM0vXCICm+cL68P8Nvf/Pr0dlprftx1iWt3Z08x
      fjpogq6HayjQj0aAvUAFmUDtjC07HIfy3DwhVkDdOChZGOu58vLrh0kX7hDP9vFf/vQv+IP/
      9B84/1UfLzbXkCubZHTM5mrPZf7lC4doaOmg+cHMO+SFnmF+eep6ic5+KTSm4+B6Hp7zqGpT
      CDdTeOIBmAPJ9PyN3+o8BGYOokkAniNDw8O8cmgfI/cnePmNbxLqP0vdjhfZ0ljFnf5qdmyq
      4e6N83z4YRfldS1sa6kmm7f5q1+ewXHnny5QahowLAutFIZ61ABOh2bO/6nSmrZUmjlFNJTN
      LuGkEfxc0EvqtVFKobVGa42aei72x8e7+XHXpXU+v9X51/uCRIZ7qWhpgexR7OTnAPS2/Clj
      wdbp7Y6kMhwcTcwuAQxgUwKs2eGQEuC5oB5/znvhLZWavviHEil++sm1dTyvteGg0Ko4LVo7
      xTEAz4yRDTZObxMEOueb9lyTm/PiB+kF8i2tNT863k2u4JT6VBblaAM9VUV7OA3CCTeRIzi9
      zQv5AtHCHGMbMQ/i8zfuJQA+dff+JCfO95b6NJbE0YqI1oDGLRQv5tRj058VsC81R+PXBGrG
      gPnbNxIAn/qHjy6XbHrzcrkowsHQjDGATGTr9OeNrkdTeo55P7UZMBeeDyQB8KHhRIqT3XdL
      fRpL5mhFMBoFrzgGoI0Q6dCm6c/3pTOYT/YClLkQHWMxEgAfeu+LHmzn6e32fJKjwbKs6eqP
      G24gS/HZgJjW7Hiy69MCqhMsVPV5SALgM7mCw0fn7pT6NJbF1cXlrkxVbAA/Xv/fmSsQefKh
      l7oUGEub0iHdoD5z5vogo5PzPyT+NPK0h1ew8cxilSY9Vf83gX2pJ7o+K1wIL171eUhKAB/R
      WnPiQl+pT2PZPO3huA6eO45WJpmpEqDFcanLPnanDwBVC8wCnYMEwEeSmQIXeoZLfRrLZnku
      RKIYJPFC9aQpLoC1L5VGPd74nZrjvxwSAB+50jeyISu5rbWgdiESwsmPTi9/UuFptj3e+K2y
      ITix7GNLG8BHzl4fLPUprEjA0xhBjfbypKMdAHTmcgTcqbfKhPSMOf7LISWAT7ieR/ft+6U+
      jRUxPI32kqA16chWLK3pTE7d/RVQNzljjv9Sea4pJYBfjE5k137d/g2iPI2dH0GHqkkRY4fj
      UJHLARqqCxBY3rLsnmcyPhhn9FZUAuAXvcMTz8TEt7k4hoWpMtPLn7/88KGXCFCWWGjXGVzX
      YmIwzkhPhEKyOLdIAuATd4aeXE//2eEaJq6TIB3roEZr2tLpYtWndhzU4qF2XYvxe2WM3Apj
      p4oX/kMSAJ/ofZYDoBR4k6SjX+eVVAbD86AuB9bCS5+4rsVYfzkjPSGczMwL/yEJgA9orRlK
      LL5M4NPK0BqCFjlVxt7UKEQ9iM9d9dGA5wZI9JUxeiuMk/WY68J/SALgA3nbZTz1FC53skSG
      7TCpouzKe4ScAjSNATNfrK01uE6AxN3ihe/mPJYyGU4C4APZvE22ROv6rwXTckiHWziUTKHq
      smA86s3SGhw7SKKvjMSd0JIv/IckAD5QsF1yBXfxDZ9aGSoCm2kwkhAtDnhpDXYhSKKvnLE7
      Ady8ZjkX/kMSAB/I2+5TvezJYhxgW8HEqB4tLvWeDzHaW8Z4bwC3MHfjdqkkAD5QcJ7luz8Y
      VpSOSIJ8AUbv1DHea+LZsJoL/yEJgA88y3d/gErTZHggwOS1anRubcMsARBPLdPUxOt6uTaZ
      YHx3Gex0sbAIeUECtoGV1Zgpj4BrEfQCBAoGVkZjpl0COkDANbEKCjOnUVlvzjWDJAA+YBrP
      3pzHaFmKYMNX2NYQ7lAbo12a8u/EKMQKZJia0l0x//4KhdKAVihPY2iDIEGCrkUgB2baw8pJ
      AHwhHJz9ArmnlWVp4o3XcOIXsaf6+k3XpDBRYPIolL8TQ0cXr9JpNFoBSoMBLi42WdIBIAxM
      vVTm2bs1iGULBkwC1tP/Tx2vGiO29Sh2/Bz6sYEuL1e84AsTBZJH06j02v0tT///FbFqkWCA
      SCiw+IYlEgo5VLadQzccxTFmzllSKNzHGr758QLJDzJrFgIJgA9EQhaxpzAASmnK6wYJtb+H
      HZn7jZRBI4j5xGWaH8uTPJaB9BJXBF6ABMAHLNOgPB4q9WnMEI5mqWj/HLfmY1w1/0Q9ExM1
      x2WaT+RJH8+tOgQSAB9QSrG5trzUpwEUuzbLG28TaDmKHbrDooNZDvPOcMiN5lYdAukF8on2
      ptnv0t1osfIkVv1pHGtoyft4eW96afS55EZz0AWxb4YhuvyRYQmAT7Q3li4AVsAj3nANJ3YJ
      ZwlPcD0uaAQXLSRyIzk4DvG3w+jI8kIgVSCf2FRbRrQEDeF4VYLYlg+wY+fRy7z4AUIsre2S
      G8mROpZD5ZZ3SUsAfKK6PMKmurIN+75gyKGy/Sy64QMcY4z5X924MOUs/RLNjeRIfZBD5Ze+
      jwTAJ5RSdG6t34Dv0ZTVDRJu/zV2+BqrnbHpZZc3+S03kiX9/tJLAgmAj+zpaFjpjXhJIrEs
      FVs+w6v5CFfN87rSZVL28s84O5IlfXxpIZAA+MjO1lqqyiNrflzT9Khouo21+T3s4Nq+dyxs
      hle0X/Z+lnRXDpVbOEASAB+JhAIc2NG0pseMlk9StuVjnIrP8VR+TY8NYHkr76jMDmfJfFhY
      sCSQAPjMG52tS36n8EKsgEvF5isYze9jL6Nff7l0fnVtiMxQhsyH+XlDIAHwmd1b6mmuWXlv
      kFIQrx4h1n4MJ34ezfout+hkV3/8zFCGzG/yc/YOSQB8JmAZfOuVrYtvOIdQ2Kai9Sy6rgvH
      XPpriFYqYAQw9do8y5AZnCoJCjMveQmADx15eQvh4NLr1kpBed0Aobaj2JFroDbmGWMTc9ZM
      0NXIDGbIdOVR9qNjSgB8qDIeXnIpEI7mqNx6atFZm+vCVStZ6mdBmcEMmeN5jKkBNgmAT/3e
      m7sIBeavXpimpqLpFsHWX1EIlObFel7BxXPW/m32mcEM6ePFkkAC4FNVZWHeObhtzs+i5UnK
      tnyIU/EFLqV7p1hQBcFb+wAAZAaKbQIJgE8ppfhXh3dRVfZooCkQcKncfBmj+T1sq/SvUwqp
      9X2IJ3MvIwHws/JoiN//Zud012Z0yzHs+IUZD6SXkuGu/2oWEgAfU0pxZH87r/yzMajvKs7a
      fIp4a7wK3FwkAD4XDJj84dffIRx4up4ZhtWPAi+FBEDQWtXO7+75N6U+jVki5tpP3HuSBECg
      lOI7O/85B1oOlvpUZljNRLilkgAIAAJmgH9/6Ps0lK3tbNFV2YAeWAmAmFYRqeTP3vyvxILx
      Up8KAG5m/d9rLAEQM2yp6eD7b/xnAmZpV5IzlYmxRhPhFiIBELO83PIq/+7gf8Q0SrdqjomJ
      pSQAokTe3PYWf/Tqn2Co0lwiSiuUu55PMBfJwlhiTgrF2zvewVAGf/PFX+N4G/uaVc/x8Oz1
      n3YtJYCYl1KKt7Z/m++/8WeErZU9nL5SlrbQrgyEiRJTSnGo/Wv8+Vs/oCZau2HfGzY2JnAS
      ALEopRQ7G1/iB9/5b2yv27kh32luwCAYgNJar385I54beSfPu+d+xK+v/BxPr18dvSZZQ9nN
      9R+PkACIZdNac3HwHD/87H9yP7U+S6JUPqiksn+B10CuEQmAWLFMIcO75/6eY9ePrnkvUeNo
      I+G+9Z+hKgEQq6K1pnfsDj8587+5OHhuzapFraOtGH3rOw5gWpYEQDykuXvtPF5VB231cT79
      7FNeffU1TOVwsus45a0vEndGuHk/x47mMkbsKC21MerqGzCUwtMe3YPn+Xn3P3J1+NKqg9A6
      2IoxtD4BME2THbt28Y23vy0DYeIhTXk0QE8qR7k9zPkb9zhwwMOzE4znLLIDfbTte4mJZDdX
      bw/jaQd7ooJQvIrKWAhDGexp3s9LjXu4MnyJY9d+zfmBM+Sdla0X6mYcDNZ2PlIoHObFzk5e
      +9qbbGppQSklARAPGVRUlMMInDx1ipG7/fTcG6OjKocRjpIvZBnou01Dxx52hjUXLt1gbOIB
      586d5RtvHJo+immY7G7aw0uNnQwlBzl1+2M+7z1F//jSl1YxlIHhrdF7gA2DxuZm9h04wO69
      +6morEQ9tjiqVIHEFIdT779HX9bie7/1LcZGhqmviDCcNek5e5LyzTtI9V5h2Lb4ztuHSU9m
      mRi6iarewvbNdQse2XYL3Enc5szdL7g4eJ7esTu43vxTnS1l0XqjBS+5smqUZQXY1NLC9p07
      eXF3J7X19VjW3Pd6CYDYUK7nMJ4d4+bIDW48uMqt0R6GJgcYzz56ID9AgNbrrbjppT0PUFFZ
      SW19PZs2t9K2pZ3NrW3E4nEM4/FSxKX70y6i276GHurm3M0B3v6t35EqkChycim6uo5RsCr4
      1luHCVkzqyCp0QF6hvMYhQRbd+1l8NoZrj0o8N0jb2AYS2+smoZFTayOmlgdB9tex9MerueQ
      LqQZTg4xlkkwkRnHbDDIpTM4rov2PEzTxLQswuEw0ViMWLyMqupqqqqrCUcimKY5o2ozm8HO
      js1cyLpsb6jHunaHjK0lAKLIDMV4oWMLTrSFoZsXuDNh0Ll9M/cG7qFshy9PfURjWxufXX/A
      n+/ay2Ayz9tfP7Tqdw0YysAwg1RGglRGqh598OLqjjsX7XnYjo1txuncWsVQQhbGElOUUhiG
      gWEYDN0f4uSnJ7ly8Sy1Te2MT6TZ+9oRvnvkdY4cOUw8ZBJVNj/6vz8lvwEzNteGw5fd93hw
      q5vk6AC3UuXsqnGkBBCPxCtq8IIhJoMhtm/bTnP7Dppq4mSamwhGQmBFaK4FKL69vbapieAy
      qj+lFeD1t789/VPbjuJ/pREsfOGrT97jeu84h7/7L9hUHZ3+vQRA+MQ4J35zl/2d1Xx48ixv
      vHmQSxduShVI+MvQ0D1SI9c5da6C8vKtEgDhFxG2djQRCySpa+uko2MLZeX1UgUS/ibdoMLX
      JADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQA
      wtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLX
      JADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1/4/yfsZNSo08RsAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='26' name='Total revenue' width='124'>
      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
      KAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Visualize cluster of tariffs for the voice and data revenue. Add daily timeline of voiceand datarevenue for that tariff as tooltip.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekly KPI performance Analysis Dashboard ' width='192'>
      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
      YDLtPPr/D1qTWjOF1jCQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekly time plot of each KPI' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Which tariff has the highest data revenue growth in last month' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='44' name='Which tariff has the highest revenue on January, 2020' width='164'>
      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
    </thumbnail>
    <thumbnail height='24' name='average revenue per subscriber' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC5ElEQVRYhe1VTUhUURg9hbYR3bhwIaa5SNwYMRM8RC0Xjovpb0D6MRgljWahTQwZVDRi
      BMIgLsTFYAqjaCSNosKQFQYjFITPHIsINWWo0CnMGlJCZuC0UEPn93Uz3qI5u3fvuecezvfu
      9+0hSfzH2Ku2AbWRCEBtA2ojEYDaBtRGIgC1DaiNRABqG1AbiQDUNqA2koRPBlcwNWDHvYdP
      MeX9gQCSkZqRj2LjVVw7W4A0JRLPbkG6/jji3oAsIxsAxhuhtbhiC+lbITeVABhHo9aC2Gw9
      WuUmlGx9UgTeIZr1x3jutoPjc36ukyTX6Z97wjsVEnU2mQEFMvNdZ1hqk4UskCQDMm26Ulrd
      q0rIlG06llrd3M4WCiDwvJf2aX/kzRk7DRoLXXE9BTh2U0OTc1nEAknS5zRRqnTQq4xMk1RJ
      RwhZqAckFV7A5YIoP3lmFg5gGd++x1OZxbvXacjNSRexAAQn0dPhQbGxYuOpxCZjsqcDnmIj
      KkLIu9wEg1hw9uPF/kIcyYxDXfNiYSkPuTliN30e7sRgSjVqy1OUkNE5mILq2nKEssWbYCiC
      K5jqasAVB2Dqq8HBeHzfEj5iAs3lWjRvLiWnZiBfcwLnzRdRlrUvxl2b1be0xL/nd/UtaIlE
      Fn6AJEk/px111Gl0rHO84lclnU+JqsvCl9G0AjJtOokNo8obn9Qwymhs8QAC83TW6Sjpb3Dk
      w7qwTGTtsbBmtQWf00TJYOeMEh2fkybJQHsMsmAAfrqtOkrGdkYbBn+FVRd7P0VY3+Xqk6IB
      zNhpkEx0+oROkyS909GfjM9piljh3a4+KRjA2/bj1FhcMZPd4eVBDTUa446qetr0LNJfYuvI
      Gy6ubSQRWFvkhMNMfZE+XOQfVJ8khabA8pclwG3FUa01CiMP9QN9qMoGgFkM9XuQfqoNp7eN
      xkP1Qxgue4Tutruosr3Hyk8AyanIOXwS5vu2MMWtsdf9J2OvO3zsheIXjLIUgEo6JJkAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
